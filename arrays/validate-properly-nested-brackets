import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



class Result {

    /*
     * Complete the 'areBracketsProperlyMatched' function below.
     *
     * The function is expected to return a BOOLEAN.
     * The function accepts STRING code_snippet as parameter.
     * Validate Properly Nested Brackets
     * Given a string, check if all brackets ('()', '{}', '[]') are properly matched and nested. 
     * Return 1 if valid, otherwise return 0.
     * Solution: using an stack to store the oping brackts and pop them whe the closing shows
     */

    public static boolean areBracketsProperlyMatched(String code_snippet) {
        if(code_snippet.length() == 0)
            return false;
        //replace anything else except [] () {}
        //code_snippet = code_snippet.replaceAll("[^\\[\\](){}]", "");
       
        String closing = "])}";
        String opening = "[({";
        
        Stack<Character> stack = new Stack<>();
        char[] chars = code_snippet.toCharArray();
        for (char c : chars) {
            int i=-1;
            if(opening.indexOf(c)>-1)
                stack.push(c);
            else if((i = closing.indexOf(c)) > -1) {
                if(stack.empty())
                    return false;
               char open = stack.pop();   
               if(opening.indexOf(open)!= i)
                return false;            
            } //if the character is a closing
                
        }
        if(stack.size() > 0)
            return false;
        return true;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        String code_snippet = bufferedReader.readLine();

        boolean result = Result.areBracketsProperlyMatched(code_snippet);

        System.out.println(result ? 1 : 0);

        bufferedReader.close();
    }
}
